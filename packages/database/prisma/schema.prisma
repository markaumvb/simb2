generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Modelo Tenant (nova entidade para multitenancy)
model Tenant {
  id           Int       @id @default(autoincrement())
  nome         String
  cnpj         String    @unique
  razaoSocial  String?   @map("razao_social")
  ativo        Boolean   @default(true)
  dt_alteracao DateTime? @default(now()) @map("dt_alteracao")
  dt_inclusao  DateTime? @default(now()) @map("dt_inclusao")

  // Relacionamentos
  acerto_fechamento   Acerto_fechamento[]
  almoxarifado        Almoxarifado[]
  brinde              Brinde[]
  cidade              Cidade[]
  cliente             Cliente[]
  cobranca            Cobranca[]
  composicao          Composicao[]
  debitos_cliente     Debitos_cliente[]
  deposito            Deposito[]
  despesa             Despesa[]
  devolucao_mesa      Devolucao_mesa[]
  funcao              Funcao[]
  funcionario         Funcionario[]
  funcionario_perfil  Funcionario_perfil[]
  historico_composicao Historico_composicao[]
  historico_ponto     Historico_ponto[]
  itens_acerto        Itens_acerto[]
  itens_pedido_almoxarifado Itens_pedido_almoxarifado[]
  linha               Linha[]
  log_mesa            Log_mesa[]
  membros_linha       Membros_linha[]
  mesa                Mesa[]
  mesa_entrada        Mesa_entrada[]
  mesa_saida          Mesa_saida[]
  movimentacao        Movimentacao[]
  pedido_almoxarifado Pedido_almoxarifado[]
  perfil              Perfil[]
  permissoes_usuario  Permissoes_usuario[]
  ponto               Ponto[]
  ponto_cliente       Ponto_cliente[]
  sistema             Sistema[]
  tipo_despesa        Tipo_despesa[]
  tipo_mesa           Tipo_mesa[]

  @@map("tenants")
}

model Acerto_fechamento {
  id              Int            @id @default(autoincrement())
  data            DateTime       @default(now()) @db.Date
  id_linha        Int
  id_movimentacao Int
  id_funcionario  Int
  dt_alteracao    DateTime?      @default(now())
  dt_inclusao     DateTime?      @default(now()) @db.Timestamp(6)
  status          Boolean        @default(false)
  
  // Campo de tenant
  tenant_id       Int
  tenant          Tenant         @relation(fields: [tenant_id], references: [id])
  
  funcionario     Funcionario    @relation(fields: [id_funcionario], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_acerto_funcionario")
  linha           Linha          @relation(fields: [id_linha], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_acerto_linha")
  movimentacao    Movimentacao   @relation(fields: [id_movimentacao], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_acerto_movimentacao")
  itens_acerto    Itens_acerto[]

  @@index([id_funcionario], map: "fki_fk_acerto_funcionario")
  @@index([id_linha], map: "fki_fk_acerto_linha")
  @@index([id_movimentacao], map: "fki_fk_acerto_movimentacao")
}

model Almoxarifado {
  id                        Int                         @id @default(autoincrement())
  descricao                 String                      @db.VarChar(60)
  dt_alteracao              DateTime?                   @default(now())
  dt_inclusao               DateTime?                   @default(now())
  valor_unitario            Decimal                     @default(0) @db.Decimal(8, 2)
  saldo                     Decimal                     @default(0) @db.Decimal(8, 2)
  saldo_min                 Decimal?                    @default(0) @db.Decimal(8, 2)
  saldo_max                 Decimal?                    @default(0) @db.Decimal(8, 2)
  status                    String                      @db.VarChar(20)
  
  // Campo de tenant
  tenant_id                 Int
  tenant                    Tenant                      @relation(fields: [tenant_id], references: [id])
  
  composicao                Composicao[]
  itens_pedido_almoxarifado Itens_pedido_almoxarifado[]
}

model Brinde {
  id              Int          @id @default(autoincrement())
  taco            Boolean      @default(false)
  trofeu          Boolean      @default(false)
  outros          Boolean      @default(false)
  dt_alteracao    DateTime?    @default(now())
  dt_inclusao     DateTime?    @default(now())
  id_linha        Int
  id_movimentacao Int
  id_mesa         Int
  troca_pano      Boolean      @default(false)
  data            DateTime     @default(now()) @db.Timestamp(6)
  
  // Campo de tenant
  tenant_id       Int
  tenant          Tenant       @relation(fields: [tenant_id], references: [id])
  
  linha           Linha        @relation(fields: [id_linha], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_brinde_linha")
  mesa            Mesa         @relation(fields: [id_mesa], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_brinde_mesa")
  movimentacao    Movimentacao @relation(fields: [id_movimentacao], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_brinde_movimentacao")

  @@index([id_linha], map: "fki_fk_brinde_linha")
  @@index([id_mesa], map: "fki_fk_brinde_mesa")
  @@index([id_movimentacao], map: "fki_fk_brinde_movimentacao")
}

model Cidade {
  id           Int           @id @default(autoincrement())
  descricao    String        @db.VarChar(30)
  uf           String        @db.Char(2)
  dt_alteracao DateTime?     @default(now())
  dt_inclusao  DateTime?     @default(now()) @db.Timestamp(6)
  
  // Campo de tenant
  tenant_id    Int
  tenant       Tenant        @relation(fields: [tenant_id], references: [id])
  
  cliente      Cliente[]
  funcionario  Funcionario[]
  ponto        Ponto[]

  @@unique([descricao, uf, tenant_id])
}

model Cliente {
  id              Int               @id @default(autoincrement())
  id_cidade       Int
  documento       String?           @db.VarChar(22)
  endereco        String?           @db.VarChar(50)
  bairro          String?           @db.VarChar(20)
  fone            String?           @db.VarChar(20)
  nome            String            @db.VarChar(50)
  ativo           Boolean           @default(true)
  id_linha        Int
  cep             String?           @db.VarChar(9)
  dt_nascimento   DateTime?         @db.Date
  dt_alteracao    DateTime?         @default(now())
  dt_inclusao     DateTime?         @default(now()) @db.Timestamp(6)
  complemento     String?           @db.VarChar(30)
  numero          String?           @db.VarChar(5)
  tipo_pessoa     String?           @default("FÃ­sica") @db.VarChar(10)
  
  // Campo de tenant
  tenant_id       Int
  tenant          Tenant            @relation(fields: [tenant_id], references: [id])
  
  cidade          Cidade            @relation(fields: [id_cidade], references: [id], onDelete: NoAction, map: "fk_cliente_cidade")
  linha           Linha             @relation(fields: [id_linha], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_linha")
  debitos_cliente Debitos_cliente[]
  deposito        Deposito[]
  ponto_cliente   Ponto_cliente[]

  @@index([id_cidade], map: "fki_fk_cliente_cidade")
  @@index([id_linha], map: "fki_fk_cliente_linha")
  @@index([nome])
}

model Cobranca {
  id                       Int          @id @default(autoincrement())
  data_hora                DateTime     @default(now())
  id_linha                 Int
  id_mesa                  Int
  id_movimentacao          Int
  valor_cobrado            Decimal      @db.Decimal(5, 2)
  desconto                 Decimal?     @db.Decimal(5, 2)
  dt_alteracao             DateTime?    @default(now()) @db.Timestamp(6)
  dt_inclusao              DateTime?    @default(now()) @db.Timestamp(6)
  contador_anterior        Int
  contador_atual           Int
  motivo_visita            String?      @db.VarChar(150)
  coord_y                  String?      @db.VarChar(20)
  coord_x                  String?      @db.VarChar(20)
  id_ponto                 Int?
  tipo_cobranca            String?      @db.VarChar(15)
  id_funcionario           Int
  contador_brinde_atual    Int?
  contador_brinde_anterior Int?
  
  // Campo de tenant
  tenant_id                Int
  tenant                   Tenant       @relation(fields: [tenant_id], references: [id])
  
  funcionario              Funcionario  @relation(fields: [id_funcionario], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_movimentacao_funcionario")
  linha                    Linha        @relation(fields: [id_linha], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_movimentacao_linha")
  mesa                     Mesa         @relation(fields: [id_mesa], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_movimentacao_mesa")
  movimentacao             Movimentacao @relation(fields: [id_movimentacao], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_movimentacao_movimentacao")
  ponto                    Ponto?       @relation(fields: [id_ponto], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_movimentacao_ponto")

  @@index([id_funcionario], map: "fki_fk_movimentacao_funcionario")
  @@index([id_linha], map: "fki_fk_movimentacao_linha")
  @@index([id_mesa], map: "fki_fk_movimentacao_mesa")
  @@index([id_movimentacao], map: "fki_fk_movimentacao_movimentacao")
  @@index([id_ponto], map: "fki_fk_movimentacao_ponto")
}

model Composicao {
  id                   Int                    @id @default(autoincrement())
  id_mesa              Int
  dt_inclusao          DateTime?              @default(now()) @db.Timestamp(6)
  dt_alteracao         DateTime?              @default(now())
  saldo                Decimal?               @default(0) @db.Decimal(8, 2)
  id_almoxarifado      Int
  status               Boolean                @default(true)
  
  // Campo de tenant
  tenant_id            Int
  tenant               Tenant                 @relation(fields: [tenant_id], references: [id])
  
  almoxarifado         Almoxarifado           @relation(fields: [id_almoxarifado], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_composicao_almoxarifado")
  mesa                 Mesa                   @relation(fields: [id_mesa], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_composicao_mesa")
  historico_composicao Historico_composicao[]

  @@index([id_almoxarifado], map: "fki_fk_composicao_almoxarifado")
  @@index([id_mesa], map: "fki_fk_composicao_mesa")
}

model Debitos_cliente {
  id             Int       @id @default(autoincrement())
  id_cliente     Int
  id_linha       Int
  dt_alteracao   DateTime? @default(now()) @db.Timestamp(6)
  dt_inclusao    DateTime? @default(now()) @db.Timestamp(6)
  debito_credito String    @default("DÃ©bito") @db.VarChar(10)
  valor          Decimal   @default(0)
  
  // Campo de tenant
  tenant_id      Int
  tenant         Tenant    @relation(fields: [tenant_id], references: [id])
  
  cliente        Cliente   @relation(fields: [id_cliente], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_debito_cliente_cliente")
  linha          Linha     @relation(fields: [id_linha], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_debito_cliente_linha")

  @@index([id_cliente], map: "fki_fk_debito_cliente_cliente")
  @@index([id_linha], map: "fki_fk_debito_cliente_linha")
}

model Deposito {
  id              Int          @id @default(autoincrement())
  dt_hora         DateTime     @db.Timestamp(6)
  valor           Decimal      @db.Decimal(6, 2)
  especie         String       @default("Dinheiro") @db.VarChar(15)
  dt_cheque       DateTime?    @db.Date
  id_linha        Int
  id_movimentacao Int
  dt_alteracao    DateTime?    @default(now())
  dt_inclusao     DateTime?    @default(now()) @db.Timestamp(6)
  id_cliente      Int?
  numero_boleto   String?      @db.VarChar(30)
  id_funcionario  Int
  
  // Campo de tenant
  tenant_id       Int
  tenant          Tenant       @relation(fields: [tenant_id], references: [id])
  
  cliente         Cliente?     @relation(fields: [id_cliente], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_deposito_cliente")
  linha           Linha        @relation(fields: [id_linha], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_deposito_linha")
  movimentacao    Movimentacao @relation(fields: [id_movimentacao], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_deposito_movimentacao")

  @@index([id_cliente], map: "fki_fk_deposito_cliente")
  @@index([id_linha], map: "fki_fk_deposito_linha")
  @@index([id_movimentacao], map: "fki_fk_deposito_movimentacao")
}

model Despesa {
  id              Int          @id @default(autoincrement())
  favorecido      String       @db.VarChar(50)
  valor           Decimal      @db.Decimal(6, 2)
  dt_hora         DateTime     @default(now()) @db.Timestamp(6)
  especie         String       @default("Dinheiro") @db.VarChar(15)
  dt_cheque       DateTime?    @db.Date
  num_cheque      String?      @db.VarChar(15)
  id_linha        Int
  id_movimentacao Int
  dt_alteracao    DateTime?    @default(now()) @db.Timestamp(6)
  dt_inclusao     DateTime?    @default(now()) @db.Timestamp(6)
  id_funcionario  Int?
  id_ponto        Int?
  id_tipo         Int
  
  // Campo de tenant
  tenant_id       Int
  tenant          Tenant       @relation(fields: [tenant_id], references: [id])
  
  linha           Linha        @relation(fields: [id_linha], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fK_despesa_linha")
  funcionario     Funcionario? @relation(fields: [id_funcionario], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_despesa_funcionario")
  movimentacao    Movimentacao @relation(fields: [id_movimentacao], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_despesa_movimentacao")
  ponto           Ponto?       @relation(fields: [id_ponto], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_despesa_ponto")
  tipo_despesa    Tipo_despesa @relation(fields: [id_tipo], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_tipo_despesa")

  @@index([id_linha], map: "fki_fK_despesa_linha")
  @@index([id_funcionario], map: "fki_fk_despesa_funcionario")
  @@index([id_movimentacao], map: "fki_fk_despesa_movimentacao")
  @@index([id_ponto], map: "fki_fk_despesa_ponto")
}

model Devolucao_mesa {
  id           Int       @id @default(autoincrement())
  descricao    String    @db.VarChar(700)
  dt_alteracao DateTime? @default(now()) @db.Timestamp(6)
  dt_inlusao   DateTime? @default(now()) @db.Timestamp(6)
  id_mesa      Int
  
  // Campo de tenant
  tenant_id    Int
  tenant       Tenant    @relation(fields: [tenant_id], references: [id])
  
  mesa         Mesa      @relation(fields: [id_mesa], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_devolucao_mesa")

  @@index([id_mesa], map: "fki_fk_devolucao_mesa")
}

model Funcao {
  id            Int             @id @default(autoincrement())
  descricao     String          @db.VarChar(50)
  dt_alteracao  DateTime?       @default(now())
  dt_inclusao   DateTime?       @default(now()) @db.Timestamp(6)
  id_sistema    Int
  
  // Campo de tenant
  tenant_id     Int
  tenant        Tenant          @relation(fields: [tenant_id], references: [id])
  
  sistema       Sistema         @relation(fields: [id_sistema], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_funcao_sistema")
  membros_linha Membros_linha[]

  @@index([id_sistema], map: "fki_fk_funcao_sistema")
}

model Funcionario {
  id                 Int                  @id @default(autoincrement())
  nome               String               @db.VarChar(60)
  dt_nascimento      DateTime?            @db.Date
  endereco           String?              @db.VarChar(60)
  id_cidade          Int
  bairro             String?              @db.VarChar(60)
  telefone           String?              @db.VarChar(14)
  cpf                String               @db.VarChar(12)
  cep                String?              @db.VarChar(10)
  status             Boolean              @default(false)
  dt_admissao        DateTime             @default(now()) @db.Date
  dt_inclusao        DateTime?            @default(now()) @db.Timestamp(6)
  dt_alteracao       DateTime?
  celular            String?              @db.VarChar(14)
  numero_endereco    Int?
  complemento        String?              @db.VarChar(20)
  salario_base       Decimal?             @db.Decimal(8, 2)
  comissao           Decimal?             @db.Decimal(5, 2)
  vale_alimentacao   Decimal?             @db.Decimal(5, 2)
  nota_promissoria   Decimal?             @default(0) @db.Decimal(7, 2)
  email              String
  senha              String
  dt_aposentadoria   DateTime?            @db.Date
  
  // Campo de tenant
  tenant_id          Int
  tenant             Tenant               @relation(fields: [tenant_id], references: [id])
  
  acerto_fechamento  Acerto_fechamento[]
  cobranca           Cobranca[]
  despesa            Despesa[]
  cidade             Cidade               @relation(fields: [id_cidade], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_funcionario_cidade")
  funcionario_perfil Funcionario_perfil[]
  log_mesa           Log_mesa[]
  membros_linha      Membros_linha[]
  permissoes_usuario Permissoes_usuario[]

  @@unique([email, tenant_id])
  @@index([id_cidade], map: "fki_fk_funcionario_cidade")
}

model Funcionario_perfil {
  id                       Int                  @id @default(autoincrement())
  id_funcionario           Int
  id_perfil                Int
  status                   Boolean              @default(true)
  dt_alteracao             DateTime?            @default(now())
  dt_inclusao              DateTime?            @default(now()) @db.Timestamp(6)
  id_sistema               Int?
  coord_x                  String?              @db.VarChar(20)
  coord_y                  String?              @db.VarChar(20)
  descricao                String?              @db.VarChar(200)
  id_linha                 Int?
  num_telefone             String?              @db.VarChar(20)
  token                    String?              @db.VarChar(200)
  
  // Campo de tenant
  tenant_id                Int
  tenant                   Tenant               @relation(fields: [tenant_id], references: [id])
  
  funcionario              Funcionario          @relation(fields: [id_funcionario], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_funcionario_perfil_funcionario")
  linha                    Linha?               @relation(fields: [id_linha], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_funcionario_perfil_linha")
  perfil                   Perfil               @relation(fields: [id_perfil], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_funcionario_perfil_perfil")
  sistema                  Sistema?             @relation(fields: [id_sistema], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_funcionario_perfil_sistema")

  @@index([id_funcionario], map: "fki_fk_funcionario_perfil_funcionario")
  @@index([id_linha], map: "fki_fk_funcionario_perfil_linha")
  @@index([id_perfil], map: "fki_fk_funcionario_perfil_perfil")
  @@index([id_sistema], map: "fki_fk_funcionario_perfil_sistema")
}

model Historico_composicao {
  id            Int        @id @default(autoincrement())
  id_composicao Int
  saldo         Int
  dt_inclusao   DateTime?  @default(now()) @db.Timestamp(6)
  
  // Campo de tenant
  tenant_id     Int
  tenant        Tenant     @relation(fields: [tenant_id], references: [id])
  
  composicao    Composicao @relation(fields: [id_composicao], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_historico_composicao_composicao")

  @@index([id_composicao], map: "fki_fk_historico_composicao_composicao")
}

model Historico_ponto {
  id                      Int          @id @default(autoincrement())
  id_ponto                Int
  id_linha                Int
  id_movimentacao         Int
  numero_ponto            Int?
  dt_inclusao_ponto       DateTime?    @db.Timestamp(6)
  dt_alteracao_ponto      DateTime?    @db.Timestamp(6)
  cliente                 String       @db.VarChar(60)
  dt_inicio_cliente       DateTime?    @db.Timestamp(6)
  dt_encerramento_cliente DateTime?    @db.Timestamp(6)
  fantasia                String?      @db.VarChar(30)
  dt_inclusao             DateTime?    @default(now()) @db.Timestamp(6)
  qtde_mesa               Int
  media_cobranca          Decimal?     @db.Decimal(15, 2)
  
  // Campo de tenant
  tenant_id               Int
  tenant                  Tenant       @relation(fields: [tenant_id], references: [id])
  
  linha                   Linha        @relation(fields: [id_linha], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_historico_ponto_linha")
  movimentacao            Movimentacao @relation(fields: [id_movimentacao], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_historico_ponto_movimentacao")
  ponto                   Ponto        @relation(fields: [id_ponto], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_historico_ponto_ponto")

  @@index([id_linha], map: "fki_fk_historico_ponto_linha")
  @@index([id_movimentacao], map: "fki_fk_historico_ponto_movimentacao")
  @@index([id_ponto], map: "fki_fk_historico_ponto_ponto")
}

model Itens_acerto {
  id                   Int               @id @default(autoincrement())
  descricao            String            @db.VarChar(60)
  valor                Decimal           @db.Decimal(12, 2)
  data                 DateTime          @default(now()) @db.Date
  id_acerto_fechamento Int
  debito_credito       String            @default("crÃ©dito") @db.Char(8)
  dt_inclusao          DateTime          @default(now()) @db.Timestamp(6)
  dt_alteracao         DateTime          @default(now())
  id_item_acerto       Int?
  
  // Campo de tenant
  tenant_id            Int
  tenant               Tenant            @relation(fields: [tenant_id], references: [id])
  
  acerto_fechamento    Acerto_fechamento @relation(fields: [id_acerto_fechamento], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_itens_acerto_acerto")
  itens_acerto         Itens_acerto?     @relation("Itens_acertoToItens_acerto", fields: [id_item_acerto], references: [id], onDelete: NoAction, onUpdate: NoAction)
  other_itens_acerto   Itens_acerto[]    @relation("Itens_acertoToItens_acerto")

  @@index([id_acerto_fechamento], map: "fki_fk_itens_acerto_acerto")
}

model Itens_pedido_almoxarifado {
  id                  Int                 @id @default(autoincrement())
  id_almoxarifado     Int
  qtde                Decimal             @db.Decimal(7, 2)
  status              String              @db.Char(15)
  dt_alteracao        DateTime?           @default(now()) @db.Date
  dt_inclusao         DateTime?           @default(now()) @db.Date
  valor               Decimal             @db.Decimal(7, 2)
  id_pedido           Int
  
  // Campo de tenant
  tenant_id           Int
  tenant              Tenant              @relation(fields: [tenant_id], references: [id])
  
  almoxarifado        Almoxarifado        @relation(fields: [id_almoxarifado], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_itens_pedido_almoxarifado_almoxarifado")
  pedido_almoxarifado Pedido_almoxarifado @relation(fields: [id_pedido], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_itens_pedido_almoxarifado_pedido")

  @@index([id_almoxarifado], map: "fki_fk_itens_pedido_almoxarifado_almoxarifado")
  @@index([id], map: "fki_fk_itens_pedido_almoxarifado_pedido")
}

model Linha {
  id                  Int                   @id @default(autoincrement())
  status              String                @default("Ativo") @db.VarChar(7)
  dt_alteracao        DateTime?             @default(now())
  dt_inclusao         DateTime?             @default(now())
  descricao           String                @db.VarChar(50)
  // Campo de tenant
  tenant_id           Int
  tenant              Tenant                @relation(fields: [tenant_id], references: [id])
  
  acerto_fechamento   Acerto_fechamento[]
  brinde              Brinde[]
  cliente             Cliente[]
  cobranca            Cobranca[]
  debitos_cliente     Debitos_cliente[]
  deposito            Deposito[]
  despesa             Despesa[]
  funcionario_perfil  Funcionario_perfil[]
  historico_ponto     Historico_ponto[]
  log_mesa            Log_mesa[]
  mesa                Mesa[]
  mesa_entrada        Mesa_entrada[]
  mesa_saida          Mesa_saida[]
  movimentacao        Movimentacao[]
  pedido_almoxarifado Pedido_almoxarifado[]
  permissoes_usuario  Permissoes_usuario[]
  ponto               Ponto[]
  ponto_cliente       Ponto_cliente[]
}

model Log_mesa {
  id                   Int          @id @default(autoincrement())
  id_mesa              Int
  contador_anterior    Int
  contador_atual       Int
  valor_anterior       Decimal?     @db.Decimal(5, 2)
  valor_atual          Decimal?     @db.Decimal(5, 2)
  porcentagem_anterior Decimal?     @db.Decimal(2, 2)
  porcentagem_atual    Decimal?     @db.Decimal(2, 2)
  data                 DateTime     @db.Timestamp(6)
  id_linha             Int
  id_movimentacao      Int
  cord_x               String?      @db.VarChar(30)
  cord_y               String?      @db.VarChar(30)
  id_funcionario       Int?
  
  // Campo de tenant
  tenant_id            Int
  tenant               Tenant       @relation(fields: [tenant_id], references: [id])
  
  funcionario          Funcionario? @relation(fields: [id_funcionario], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_log_mesa_funcionario")
  linha                Linha        @relation(fields: [id_linha], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_log_mesa_linha")
  mesa                 Mesa         @relation(fields: [id_mesa], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_log_mesa_mesa")

  @@index([id_funcionario], map: "fki_fk_log_mesa_funcionario")
  @@index([id_linha], map: "fki_fk_log_mesa_linha")
  @@index([id_mesa], map: "fki_fk_log_mesa_mesa")
}

model Membros_linha {
  id             Int         @id @default(autoincrement())
  dt_alteracao   DateTime    @default(now())
  dt_inclusao    DateTime    @default(now()) @db.Timestamp(6)
  id_funcionario Int
  id_funcao      Int
  status         Boolean     @default(true)
  
  // Campo de tenant
  tenant_id      Int
  tenant         Tenant      @relation(fields: [tenant_id], references: [id])
  
  funcao         Funcao      @relation(fields: [id_funcao], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_membros_linha_funcao")
  funcionario    Funcionario @relation(fields: [id_funcionario], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_membros_linha_funcionario")

  @@index([id_funcao], map: "fki_fk_membros_linha_funcao")
  @@index([id_funcionario], map: "fki_fk_membros_linha_funcionario")
}

model Mesa {
  id                   Int              @id
  status StatusMesa @default(DISPONIVEL)
  cont_atual           Int              @default(0)
  cont_anterior        Int              @default(0)
  tipo_cobranca        String?          @db.Char(12)
  porcentagem_cliente  Decimal?         @default(0) @db.Decimal(3, 2)
  dt_locacao           DateTime?        @db.Date
  id_linha             Int?
  valor                Decimal?         @default(0) @db.Decimal(5, 2)
  id_tipo              Int
  meses_cobranca       Int              @default(0)
  dt_alteracao         DateTime?        @default(now()) @db.Timestamp(6)
  dt_inclusao          DateTime?        @default(now()) @db.Timestamp(6)
  cord_x               String?          @db.VarChar(30)
  cord_y               String?          @db.VarChar(30)
  dt_entrada_linha     DateTime?        @db.Timestamp(6)
  dt_saida_linha       DateTime?        @db.Timestamp(6)
  id_ponto             Int?
  chave                String?          @db.VarChar(10)
  cont_brinde_anterior Int?
  cont_brinde_atual    Int?
  ativa                Boolean          @default(true)
  
  // Campo de tenant
  tenant_id            Int
  tenant               Tenant           @relation(fields: [tenant_id], references: [id])
  
  brinde               Brinde[]
  cobranca             Cobranca[]
  composicao           Composicao[]
  devolucao_mesa       Devolucao_mesa[]
  log_mesa             Log_mesa[]
  linha                Linha?           @relation(fields: [id_linha], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_mesa_linha")
  ponto                Ponto?           @relation(fields: [id_ponto], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_mesa_ponto")
  tipo_mesa            Tipo_mesa        @relation(fields: [id_tipo], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_mesa_tipo")
  mesa_entrada         Mesa_entrada[]
  mesa_saida           Mesa_saida[]

  @@index([id_linha], map: "fki_fk_mesa_linha")
  @@index([id_ponto], map: "fki_fk_mesa_ponto")
  @@index([id_tipo], map: "fki_fk_mesa_tipo")
}

model Mesa_entrada {
  id              Int          @id @default(autoincrement())
  id_mesa         Int
  id_linha        Int
  id_movimentacao Int
  data_hora       DateTime     @default(now()) @db.Timestamp(6)
  dt_inclusao     DateTime?    @default(now()) @db.Timestamp(6)
  dt_alteracao    DateTime?    @default(now()) @db.Timestamp(6)
  coord_x         String?      @db.VarChar(30)
  coord_y         String?      @db.VarChar(30)
  id_ponto        Int
  
  // Campo de tenant
  tenant_id       Int
  tenant          Tenant       @relation(fields: [tenant_id], references: [id])
  
  linha           Linha        @relation(fields: [id_linha], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_mesa_entrada_linha")
  mesa            Mesa         @relation(fields: [id_mesa], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_mesa_entrada_mesa")
  movimentacao    Movimentacao @relation(fields: [id_movimentacao], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_mesa_entrada_movimentacao")
  ponto           Ponto        @relation(fields: [id_ponto], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_mesa_entrada_ponto")

  @@index([id_linha], map: "fki_fk_mesa_entrada_linha")
  @@index([id_mesa], map: "fki_fk_mesa_entrada_mesa")
  @@index([id_movimentacao], map: "fki_fk_mesa_entrada_movimentacao")
  @@index([id_ponto], map: "fki_fk_mesa_entrada_ponto")
}

model Mesa_saida {
  id              Int          @id @default(autoincrement())
  id_mesa         Int
  id_linha        Int
  id_movimentacao Int
  data_hora       DateTime     @default(now()) @db.Timestamp(6)
  dt_alteracao    DateTime?    @default(now())
  dt_inclusao     DateTime?    @default(now()) @db.Timestamp(6)
  coord_x         String?      @db.VarChar(30)
  coord_y         String?      @db.VarChar(30)
  id_ponto        Int
  
  // Campo de tenant
  tenant_id       Int
  tenant          Tenant       @relation(fields: [tenant_id], references: [id])
  
  linha           Linha        @relation(fields: [id_linha], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_mesa_saida_linha")
  mesa            Mesa         @relation(fields: [id_mesa], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_mesa_saida_mesa")
  movimentacao    Movimentacao @relation(fields: [id_movimentacao], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_mesa_saida_movimentacao")
  ponto           Ponto        @relation(fields: [id_ponto], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_mesa_saida_ponto")

  @@index([id_linha], map: "fki_fk_mesa_saida_linha")
  @@index([id_mesa], map: "fki_fk_mesa_saida_mesa")
  @@index([id_movimentacao], map: "fki_fk_mesa_saida_movimentacao")
  @@index([id_ponto], map: "fki_fk_mesa_saida_ponto")
}

model Movimentacao {
  id                       Int                   @id @default(autoincrement())
  descricao                String                @db.VarChar(30)
  status                   Boolean               @default(true)
  dt_inicio                DateTime              @default(now()) @db.Date
  dt_encerramento          DateTime?             @db.Date
  id_linha                 Int
  dt_alteracao             DateTime?             @default(now()) @db.Date
  dt_possivel_encerramento DateTime?             @default(now()) @db.Date
  
  // Campo de tenant
  tenant_id                Int
  tenant                   Tenant                @relation(fields: [tenant_id], references: [id])
  
  acerto_fechamento        Acerto_fechamento[]
  brinde                   Brinde[]
  cobranca                 Cobranca[]
  deposito                 Deposito[]
  despesa                  Despesa[]
  historico_ponto          Historico_ponto[]
  mesa_entrada             Mesa_entrada[]
  mesa_saida               Mesa_saida[]
  linha                    Linha                 @relation(fields: [id_linha], references: [id], onDelete: NoAction, onUpdate: NoAction)
  pedido_almoxarifado      Pedido_almoxarifado[]
}

model Pedido_almoxarifado {
  id                        Int                         @id @default(autoincrement())
  data                      DateTime                    @default(now()) @db.Timestamp(6)
  dt_inclusao               DateTime?                   @default(now()) @db.Timestamp(6)
  dt_alteracao              DateTime?                   @default(now()) @db.Timestamp(6)
  status                    String                      @db.VarChar(30)
  id_linha                  Int
  id_movimentacao           Int
  
  // Campo de tenant
  tenant_id                 Int
  tenant                    Tenant                      @relation(fields: [tenant_id], references: [id])
  
  itens_pedido_almoxarifado Itens_pedido_almoxarifado[]
  linha                     Linha                       @relation(fields: [id_linha], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_pedido_almoxarifado_linha")
  movimentacao              Movimentacao                @relation(fields: [id_movimentacao], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_pedido_almoxarifado_movimentacao")

  @@index([id_linha], map: "fki_fk_pedido_almoxarifado_linha")
  @@index([id_movimentacao], map: "fki_fk_pedido_almoxarifado_movimentacao")
}

model Perfil {
  id              Int                  @id @default(autoincrement())
  descricao       String               @db.VarChar(20)
  cidade          Boolean              @default(false)
  cliente         Boolean              @default(false)
  debitos_cliente Boolean              @default(false)
  movimentacao    Boolean              @default(false)
  deposito        Boolean              @default(false)
  despesa         Boolean              @default(false)
  funcionario     Boolean              @default(false)
  linha           Boolean              @default(false)
  mesa            Boolean              @default(false)
  cobranca        Boolean              @default(false)
  perfil          Boolean              @default(false)
  dt_alteracao    DateTime             @default(now()) @db.Timestamp(6)
  dt_inclusao     DateTime             @default(now()) @db.Timestamp(6)
  per_gestor      Boolean              @default(false)
  ponto           Boolean              @default(false)
  
  // Campo de tenant
  tenant_id       Int
  tenant          Tenant               @relation(fields: [tenant_id], references: [id])
  
  funcionario_perfil Funcionario_perfil[]
}

model Permissoes_usuario {
  id             Int         @id @default(autoincrement())
  descricao      String      @db.VarChar(200)
  num_telefone   String?     @db.VarChar(20)
  id_funcionario Int
  permitido      Boolean     @default(false)
  dt_solicitacao DateTime    @default(now()) @db.Timestamp(6)
  dt_alteracao   DateTime?   @default(now())
  id_linha       Int
  coord_x        String?     @db.VarChar(20)
  coord_y        String?     @db.VarChar(20)
  token          String?     @db.VarChar(200)
  id_sistema     Int
  
  // Campo de tenant
  tenant_id      Int
  tenant         Tenant      @relation(fields: [tenant_id], references: [id])
  
  funcionario    Funcionario @relation(fields: [id_funcionario], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_permissao_dispositivo_funcionario")
  linha          Linha       @relation(fields: [id_linha], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_permissao_dispositivo_linha")
  sistema        Sistema     @relation(fields: [id_sistema], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_permissao_dispositivo_sistema")

  @@index([id_funcionario], map: "fki_fk_permissao_dispositivo_funcionario")
  @@index([id_linha], map: "fki_fk_permissao_dispositivo_linha")
  @@index([id_sistema], map: "fki_fk_permissao_dispositivo_sistema")
}

model Ponto {
  id              Int               @id @default(autoincrement())
  id_cidade       Int
  endereco        String            @db.VarChar(50)
  numero_endereco Int?
  cep             String?           @db.VarChar(9)
  coord_y         String?           @db.VarChar(20)
  coord_x         String?           @db.VarChar(20)
  dt_inclusao     DateTime          @default(now()) @db.Timestamp(6)
  dt_alteracao    DateTime?         @default(now()) @db.Timestamp(6)
  id_linha        Int
  tipo            String            @db.VarChar(20)
  complemento     String?           @db.VarChar(30)
  bairro          String?           @db.VarChar(20)
  numero_ponto    Int               @unique
  status          Boolean           @default(true)
  paga_aluguel    Boolean           @default(false)
  valor_aluguel   Decimal?          @db.Decimal(7, 2)
  
  // Campo de tenant
  tenant_id       Int
  tenant          Tenant            @relation(fields: [tenant_id], references: [id])
  
  cobranca        Cobranca[]
  despesa         Despesa[]
  historico_ponto Historico_ponto[]
  mesa            Mesa[]
  mesa_entrada    Mesa_entrada[]
  mesa_saida      Mesa_saida[]
  cidade          Cidade            @relation(fields: [id_cidade], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ponto_cidade")
  linha           Linha             @relation(fields: [id_linha], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ponto_linha")
  ponto_cliente   Ponto_cliente[]

  @@index([id_cidade], map: "fki_fk_ponto_cidade")
  @@index([id_linha], map: "fki_fk_ponto_linha")
}

model Ponto_cliente {
  id              Int       @id @default(autoincrement())
  fantasia        String    @db.VarChar(30)
  id_linha        Int
  id_ponto        Int
  id_cliente      Int
  documento       String?   @db.VarChar(22)
  ativo           Boolean   @default(false)
  dt_inclusao     DateTime? @default(now()) @db.Timestamp(6)
  dt_alteracao    DateTime?
  dt_encerramento DateTime? @db.Timestamp(6)
  
  // Campo de tenant
  tenant_id       Int
  tenant          Tenant    @relation(fields: [tenant_id], references: [id])
  
  cliente         Cliente   @relation(fields: [id_cliente], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ponto_cliente_cliente")
  linha           Linha     @relation(fields: [id_linha], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ponto_cliente_linha")
  ponto           Ponto     @relation(fields: [id_ponto], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ponto_cliente_ponto")

  @@index([id_cliente], map: "fki_fk_ponto_cliente_cliente")
  @@index([id_linha], map: "fki_fk_ponto_cliente_linha")
  @@index([id_ponto], map: "fki_fk_ponto_cliente_ponto")
}

model Sistema {
  id                 Int                  @id @default(autoincrement())
  descricao          String               @db.VarChar(60)
  status             Boolean              @default(true)
  dt_inclusao        DateTime             @default(now()) @db.Timestamp(6)
  dt_alteracao       DateTime?            @default(now()) @db.Timestamp(6)
  
  // Campo de tenant
  tenant_id          Int
  tenant             Tenant               @relation(fields: [tenant_id], references: [id])
  
  funcao             Funcao[]
  funcionario_perfil Funcionario_perfil[]
  permissoes_usuario Permissoes_usuario[]
}

model Tipo_despesa {
  id           Int       @id @default(autoincrement())
  descricao    String    @db.VarChar(50)
  dt_inclusao  DateTime? @db.Date
  dt_alteracao DateTime? @db.Date
  status       Boolean?  @default(true)
  
  // Campo de tenant
  tenant_id    Int
  tenant       Tenant    @relation(fields: [tenant_id], references: [id])
  
  despesa      Despesa[]
}

model Tipo_mesa {
  id           Int       @id @default(autoincrement())
  descricao    String    @db.VarChar(20)
  dt_inclusao  DateTime? @default(now()) @db.Timestamp(6)
  dt_alteracao DateTime? @default(now()) @db.Timestamp(6)
  composicao   Boolean   @default(false)
  
  // Campo de tenant
  tenant_id    Int
  tenant       Tenant    @relation(fields: [tenant_id], references: [id])
  
  mesa         Mesa[]
}

enum Role {
  ADMIN
  USER
}

enum TokenType {
  email
  API
}

enum StatusMesa {
  DISPONIVEL
  OCUPADA
  MANUTENCAO
}